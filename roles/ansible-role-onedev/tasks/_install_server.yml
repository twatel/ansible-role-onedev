#!/usr/bin/env ansible-playbook
---
- name: Ensure APT cache
  apt: 
    update_cache: yes
  changed_when: false

- name: Install onedev required APT packages
  apt: 
    name: "{{ item }}"
    state: present
  loop:
    - default-jre 
    - default-jdk
    - git

- name: Ensure onedev installation dir
  file:
    path: "{{ onedev_destination_directory }}"
    state: directory

- name: Ensure onedev installation not already exists
  stat:
    path: "{{ onedev_installation_directory }}"
  register: onedev_directory_exist

- name: Unarchive a file that needs to be downloaded
  ansible.builtin.unarchive:
    src: "{{ onedev_package_url }}"
    dest: "{{ onedev_destination_directory }}"
    creates: "{{ onedev_installation_directory }}"
    remote_src: yes
  when: not onedev_directory_exist.stat.exists

- name: Load one dev configuration variables into temporary file
  template:
    src: "sh_server_vars.j2"
    dest: "{{ onedev_installation_directory }}/onedev_vars"
    mode: 750

- name: Set server.sh variables
  ansible.builtin.lineinfile:
    path: "{{ onedev_installation_directory }}/bin/server.sh"
    regexp: '{{ item.regexp }}'
    line: '{{ item.line }}'
    mode: '755'
  loop:
    - { regexp: '^FILES_TO_SOURCE=', line: 'FILES_TO_SOURCE="{{ onedev_installation_directory }}/onedev_vars"' }

- name: Install & Start onedev service
  command: ./server.sh installstart
  args:
    chdir: "{{ onedev_installation_directory }}/bin"
